box: wercker/golang@1.3.0
steps:
  - dlapiduz/github-create-deployment
build:
  steps:
    - setup-go-workspace
    - script:
        name: Populate cache
        code: |
            if test -d "$WERCKER_CACHE_DIR/go-pkg-cache"; then rsync -avzv --exclude "src/github.com/$WERCKER_GIT_OWNER" --exclude "pkg/linux_amd64/github.com/$WERCKER_GIT_OWNER" "$WERCKER_CACHE_DIR/go-pkg-cache/" "$GOPATH/" ; fi
    - script:
        name: run suite for govcoded
        cwd: govcoded/
        code: |
          rm -f govcoded
          go get -t ./...
          go vet
          go test ./...
          go build ./...
    - script:
        name: run suite for govcode
        cwd: govcode/
        code: |
          rm -f govcode
          go get -t ./...
          go vet
          go build ./...
    - script:
        name: move deploy assets to deploy folder
        code: |
          cp govcode/govcode $WERCKER_OUTPUT_DIR
          cp govcoded/govcoded $WERCKER_OUTPUT_DIR
          echo "Deployment files for: $WERCKER_GIT_COMMIT" > $WERCKER_OUTPUT_DIR/README.md
    - script:
        name: Store cache
        code: |
            rsync -avzv --exclude "src/github.com/$WERCKER_GIT_OWNER" --exclude "pkg/linux_amd64/github.com/$WERCKER_GIT_OWNER" "$GOPATH/" "$WERCKER_CACHE_DIR/go-pkg-cache/"
deploy:
  steps:
    - script:
        name: Configure git
        code: |-
          git config --global user.email "pleasemailus@wercker.com"
          git config --global user.name "wercker"
          rm -rf .git
    - script:
        name: Deploy assets to deploy branch
        code: |-
          git init
          git add .
          git commit -m "deploy commit from $WERCKER_STARTED_BY [ci skip]"
          git push -f $GIT_REMOTE master:deploy
    - dlapiduz/github-create-deployment:
        token: $GITHUB_TOKEN
        environment: $GITHUB_DEPLOY_ENV
        ref: deploy
        auto_merge: false

